#summary Frequently Asked Questions about Cofoja

==Are there any pre-packaged JAR files I can download?==
    Cofoja is a very young project and for now the recommended way to try it out is to build it from sources (checkout the SVN repository) in order to keep up with the most current changes and bug fixes.

    If for some reason you'd prefer to use a pre-compiled JAR file, Nhat maintains a directory with snapshot builds from his development branch at: http://www.huoc.org/~minh/cofoja/
    (Plain versions come bundled with ASM classes; `-bare` versions only contain Cofoja files. `ccofoja` builds have Cofoja's own contracts turned on, see below, "are you eating your own dogfood?")

==What do I need in order to use Cofoja?==
    Cofoja depends on Java 6 or higher for annotation processing and instrumentation support. The ASM package is also required and can be downloaded from: http://asm.ow2.org/ (Cofoja is being developed against version 3.3; any 3.x should work.)
    Cofoja comes with an Ant script for compilation and a set of JUnit 3 tests.

==How is this better than using assert?==
    Contracts are inherited from superclasses and interfaces.
    Inherited contracts can be extended, but only within the limits imposed by the superclass -- as in the Liskov substitution principle.
    {{{@Ensures}}} can use the {{{old}}} keyword to refer to the state at the start of the method, e.g. {{{@Ensures("size() == old(size()) + 1")}}}.
    All contracts can use the {{{=>}}} operator for 'implies', e.g. {{{@Requires("foo != null => foo.size() > 0")}}}.
    {{{@Invariant}}} adds checks to every public method.
    {{{@ThrowEnsures}}} adds checks about conditions when an exception is thrown.
    Disabled by default -- so you can and should write expensive checks. Can be enabled all at once or selectively, i.e. just for a particular library or group of libraries.
    Clean separation of assumptions and guarantees from the actual method code. The annotations become part of the javadoc.

==Is this framework related to '!ModernJass' from Sourceforge.net?==
    Yes, Cofoja is a significant rewrite of !ModernJass. We worked closely with the original author of !ModernJass (Johannes Rieken) on this.

==Is code annotated with contracts slower than code not annotated?==
    If runtime checking is enabled, yes. If runtime checking is disable the code is as fast as if there were no annotations.

==Is there any IDE support yet?==
    Not yet. The eclipse plugin from the !ModernJass sourceforge.net page is obsolete. Let us know if you would like to help! 

==What about debugger support?==
   Contracts for Java adds standard debugging information, such as source file and line numbers, to contract code. Debugging has been tested under JDB, Eclipse and IntelliJ (using remote debugging); only Eclipse has issues with setting breakpoints on contract annotations (source correspondence and step-by-step debugging works, though).

==Is the source code of Contracts for Java annotated with contracts? (I.e. are you eating your own dogfood?)==
    Yes, all the classes in Cofoja that could bear contracts have been contracted; some classes needed at run time cannot be annotated because of technical reasons. New classes are only added to the project with proper contracts.